events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    
    # Gzip compression
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml;

    # Main server block - handles all AccessWash subdomains
    server {
        listen 80;
        # Wildcard server_name catches all subdomains: *.accesswash.org
        server_name ~^(?<subdomain>[^.]+)\.accesswash\.org$ localhost 127.0.0.1;

        # Static files
        location /static/ {
            alias /app/staticfiles/;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        location /media/ {
            alias /app/media/;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Django app - django-tenants will handle subdomain routing
        location / {
            proxy_pass http://web:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Pass extracted subdomain to Django (for debugging)
            proxy_set_header X-Subdomain $subdomain;
            
            # Handle WebSocket upgrades for Django Channels (if used later)
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
    }

    # Fallback server for non-matching domains
    server {
        listen 80 default_server;
        server_name _;
        
        # Redirect to main platform
        return 301 https://api.accesswash.org$request_uri;
    }

    # Health check endpoint (for load balancers)
    server {
        listen 80;
        server_name health.accesswash.org;
        
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}