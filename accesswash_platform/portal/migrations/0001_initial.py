# Generated by Django 5.1.9 on 2025-07-31 23:23

import django.contrib.gis.db.models.fields
import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('distro', '0002_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(db_index=True, help_text='Primary email address', max_length=254, unique=True)),
                ('phone_number', models.CharField(blank=True, db_index=True, help_text='Alternative login method', max_length=17, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('password_hash', models.CharField(help_text='Hashed password', max_length=128)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('account_number', models.CharField(db_index=True, max_length=50, unique=True)),
                ('meter_number', models.CharField(blank=True, db_index=True, max_length=50, null=True)),
                ('property_address', models.TextField(help_text='Service address')),
                ('property_location', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('connection_date', models.DateField(blank=True, null=True)),
                ('service_type', models.CharField(choices=[('residential', 'Residential'), ('commercial', 'Commercial'), ('industrial', 'Industrial'), ('institutional', 'Institutional')], default='residential', max_length=20)),
                ('language', models.CharField(choices=[('en', 'English'), ('sw', 'Swahili')], default='en', max_length=10)),
                ('notification_preferences', models.JSONField(blank=True, default=dict, help_text='Communication preferences')),
                ('is_active', models.BooleanField(default=True, help_text='Can login to portal')),
                ('email_verified', models.BooleanField(default=False, help_text='Email address verified')),
                ('phone_verified', models.BooleanField(default=False, help_text='Phone number verified')),
                ('is_deleted', models.BooleanField(default=False, help_text='Soft delete flag')),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('last_activity', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('meter', models.ForeignKey(blank=True, help_text='Linked water meter', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='customers', to='distro.meter')),
            ],
            options={
                'verbose_name': 'Customer',
                'verbose_name_plural': 'Customers',
                'db_table': 'customers',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CustomerSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_token', models.CharField(db_index=True, max_length=255, unique=True)),
                ('refresh_token', models.CharField(db_index=True, max_length=255, unique=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('device_info', models.JSONField(blank=True, default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('expires_at', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_used_at', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='portal.customer')),
            ],
            options={
                'db_table': 'customer_sessions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CustomerVerification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verification_type', models.CharField(choices=[('email', 'Email Verification'), ('phone', 'Phone Verification'), ('password_reset', 'Password Reset')], max_length=20)),
                ('token', models.CharField(db_index=True, max_length=32, unique=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=17, null=True)),
                ('is_used', models.BooleanField(default=False)),
                ('expires_at', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('used_at', models.DateTimeField(blank=True, null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='verifications', to='portal.customer')),
            ],
            options={
                'db_table': 'customer_verifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['email'], name='customers_email_92e882_idx'),
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['phone_number'], name='customers_phone_n_7d2329_idx'),
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['account_number'], name='customers_account_d927e7_idx'),
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['meter_number'], name='customers_meter_n_32f2e5_idx'),
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['is_active', 'is_deleted'], name='customers_is_acti_05239f_idx'),
        ),
        migrations.AddIndex(
            model_name='customersession',
            index=models.Index(fields=['session_token'], name='customer_se_session_e37408_idx'),
        ),
        migrations.AddIndex(
            model_name='customersession',
            index=models.Index(fields=['refresh_token'], name='customer_se_refresh_575e58_idx'),
        ),
        migrations.AddIndex(
            model_name='customersession',
            index=models.Index(fields=['customer', 'is_active'], name='customer_se_custome_25412a_idx'),
        ),
        migrations.AddIndex(
            model_name='customersession',
            index=models.Index(fields=['expires_at'], name='customer_se_expires_572922_idx'),
        ),
        migrations.AddIndex(
            model_name='customerverification',
            index=models.Index(fields=['token'], name='customer_ve_token_dd45e8_idx'),
        ),
        migrations.AddIndex(
            model_name='customerverification',
            index=models.Index(fields=['customer', 'verification_type'], name='customer_ve_custome_82ec06_idx'),
        ),
        migrations.AddIndex(
            model_name='customerverification',
            index=models.Index(fields=['expires_at'], name='customer_ve_expires_3e53ef_idx'),
        ),
    ]
